##########################

Codon Pairing Distance Matrix
pairing_distance.py
Created By: Justin Miller
Email: jmiller@byu.edu

##########################

Purpose: Create a distance matrix using codon pairing.

##########################

ARGUMENT OPTIONS:

	-h, --help               show this help message and exit
	-i    [INPUT [INPUT ...]]Input Fasta Files
	-id   INPUTDIR           Input Directory with Fasta Files
	-o    OUTPUT             Output File
	-t    THREADS            Number of Cores
	-f    FOOTPRINT          Ribosome Footprint
	-c    CO_TRNA            Number of Occurances
	-rna  RNA                Flag for RNA sequences

##########################

REQUIREMENTS:

cam.py uses Python version 2.7

Python libraries that must be installed include:
1. sys
2. multiprocessing
3. argparse
4. re
5. itertools
6. os
7. gzip (optional if using gzip files)
8. Bio.Seq,Bio.Alphabet

If any of those libraries is not currently in your Python Path, use the following command:
pip install --user [library_name]
to install the library to your path.

##########################

Input Files:
This algorithm requires two or more fasta files, or a directory which contains two or more fasta files.

Output File:
An output file is not required. If an output file is not supplied, the distance matrix will be written to standard out.

##########################

USAGE:

Typical usage requires the -i or the -id option. When using -i, input file names are space separated, 
with two or more files required. The algorithm will compare all sequences in all files to find 
all codon pairings within a ribosome footprint.

By default, all possible threads are used. If you want to change that, use the -t option.

By default, DNA sequences are expected. 

By default, the ribosome footprint size is 9 codons


Example usage:
python pairing_distance.py -id ../testFiles/mammals/ -o output
python pairing_distance.py -i ../testFiles/mammals/* > output


Running one of the above commands will produce a single output file called 'output' in the current directory.
This command should take under a minute on a single core. If your machine allows multithreading, it should finish much faster.

##########################

License:

This algorithm is free for all academic and non-profit research purposes. 

We only ask that you please cite the following paper if you use this algorithm:
Codon Aversion Motifs: An alignment-free method to recover phylogenies.

For any for-profit usage, please contact Justin Miller at jmiller@byu.edu

##########################

Thank you, and happy researching!!

